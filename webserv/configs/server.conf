server {
	listen localhost:8080;
	server_name xxxxxxx.com; #explicit name without regex | if empty then =""(machine host name) | can be as ip
	error_page 404 /errors/404.html;
	client_max_body_size 100;
	location / {
		root /; #handled as lol/kek/ when searching for file
		autoindex on;
		index index.html;
		limit_except GET;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
		upload_path /;
	}
	location /YoupiBanane {
        root /; #handled as lol/kek/ when searching for file
		autoindex off;
        index index.html;
        max_body 100;
        limit_except GET;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /put_test/ {
	    root                     /YoupiBanane;
		autoindex off;
        index index.html;
        max_body 100;
	    limit_except PUT POST DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}

	location /post_body {
	    root /;
		autoindex off;
        index index.html;
        max_body 100;
		limit_except POST;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /directory/ {
	    root /YoupiBanane;
        autoindex off;
	    index youpi.bad_extension;
        max_body 100;
	    limit_except GET POST PUT DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
	}
}

server {
	listen localhost:8060;
	server_name xxxxxxx.com; #explicit name without regex | if empty then =""(machine host name) | can be as ip
	error_page 404 /errors/404.html;
	client_max_body_size 100;
    return 301 http:/google.com;
	location / {
		root /; #handled as lol/kek/ when searching for file
		autoindex off;
		index index.html;
		max_body 100;
		limit_except GET;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
		upload_path /;
	}
	location /YoupiBanane {
        root /; #handled as lol/kek/ when searching for file
		autoindex off;
        index index.html;
        max_body 100;
        limit_except GET;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /put_test/ {
	    root                     /YoupiBanane;
		autoindex off;
        index index.html;
        max_body 100;
	    limit_except PUT POST DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}

	location /post_body {
	    root /;
		autoindex off;
        index index.html;
        max_body 100;
		limit_except POST;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /directory/ {
	    root /YoupiBanane;
        autoindex off;
	    index youpi.bad_extension;
        max_body 100;
	    limit_except GET POST PUT DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
}

server {
	listen localhost:8090;
	server_name xxxxxxx.com; #explicit name without regex | if empty then =""(machine host name) | can be as ip
	error_page 404 /errors/404.html;
	client_max_body_size 100;
    return 301 http:/google.com;
	location / {
		root /; #handled as lol/kek/ when searching for file
		autoindex off;
		index index.html;
		max_body 100;
		limit_except GET POST HEAD;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
		upload_path /;
	}
	location /YoupiBanane {
        root /; #handled as lol/kek/ when searching for file
		autoindex off;
        index index.html;
        max_body 100;
        limit_except GET;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /put_test/ {
	    root                     /YoupiBanane;
		autoindex off;
        index index.html;
        max_body 100;
	    limit_except PUT POST DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}

	location /post_body {
	    root /;
		autoindex off;
        index index.html;
        max_body 100;
		limit_except POST;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
	location /directory/ {
	    root /YoupiBanane;
        autoindex off;
	    index youpi.bad_extension;
        max_body 100;
	    limit_except GET POST PUT DELETE;
        cgi_extension .bla; #or regex in location just like previous location directive
        cgi_path /cgi/cgi_tester;
        upload_path /;
        return 301 http://google.com;
	}
}